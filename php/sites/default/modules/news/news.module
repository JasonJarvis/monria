<?php


function news_menu()
{
    $items = array();
    $items['news'] = array(
        'page callback' => 'news_page',
        'access arguments' => array('access content'),
        'title' => 'News',
    );
    return $items;
}

function news_node_info()
{
    return array(
        'news' => array(
            'name' => t('Monria News'),
            'base' => 'news',
            'description' => t('Add news to Monria website'),
            'title_label' => t('Monria News'),
            'locked' => TRUE,
        ),
    );
}

function news_node_type_insert($content_type)
{

    if ($content_type->type == 'news') {

        $body_instance = node_add_body_field($content_type, t('News Description'));

        $body_instance['display']['news_list'] = array(
            'label' => 'hidden',
            'type' => 'text_summary_or_trimmed',
        );

        // Save our changes to the body field instance.
        field_update_instance($body_instance);

        // Create all the fields we are adding to our content type.
        foreach (_news_installed_fields() as $field) {
            field_create_field($field);
        }

        // Create all the instances for our fields.
        foreach (_news_installed_instances() as $instance) {
            $instance['entity_type'] = 'node';
            $instance['bundle'] = 'news';
            field_create_instance($instance);
        }


    }
}

function news_form($node, $form_state)
{
    return node_content_form($node, $form_state);
}

function news_page()
{
    $renderable_array = array();
    // We query the database and find all of the nodes for the type we defined.
    $sql = 'SELECT nid FROM {node} n WHERE n.type = :type AND n.status = :status order by nid DESC';
    $result = db_query($sql,
        array(
            ':type' => 'news',
            ':status' => 1,
        )
    );

    $renderable_array['explanation'] = array(

    );

    foreach ($result as $row) {
        $nodes[] = node_load($row->nid);

    }
    return theme('news',array('nodes'=>$nodes));
}

function _news_installed_fields()
{
    return array(

        'news_image' => array(
            'field_name' => 'news_image',
            'type' => 'image',
            'cardinality' => 1,
        ),
    );
}

function news_entity_info_alter(&$entity_info)
{
    // Add our new view mode to the list of view modes...
    $entity_info['node']['view modes']['news_list'] = array(
        'label' => t('News List'),
        'custom settings' => TRUE,
    );
}

function _news_installed_instances()
{
    return array(
        'news_image' => array(
            'field_name' => 'news_image',
            'label' => t('Upload an image:'),
            'required' => FALSE,
            'widget' => array(
                'type' => 'image_image',
                'weight' => 2.10,
            ),
        ),
    );
}

function news_block_info()
{
    $blocks['recent_news'] = array(
        'info' => t('Recent News'),
    );
    return $blocks;
}

function news_block_view($delta = '')
{
    // This example is adapted from node.module.
    $block = array();

    switch ($delta) {

        case 'recent_news':
            $block['subject'] = t('Recent content');
            $type = "news";

            $result = db_query("SELECT nid FROM node WHERE type like '%s' and promote = 1 and publish = 1  ORDER BY nid DESC limit 0,3 ",array( $type));


            foreach ($result as $rec) {
                $nodes[] =node_load($rec->nid);
            }


            $block['content'] = theme('recent_news_block', array(
                'nodes' => $nodes,
            ));

            break;
    }
    return $block;
}

function news_theme($existing, $type, $theme, $path)
{
    return array(
        'recent_news_block' => array(
            'template' => 'tpl/recent_news',
            'variables' => array('nodes' => NULL),
        ),
        'news' => array(
            'template' => 'tpl/news',
            'variables' => array('nodes' => NULL),
        ),
    );
}